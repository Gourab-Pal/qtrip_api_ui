<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="8" passed="7" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-06-06T02:50:44Z" name="Qtrip Suite" finished-at="2025-06-06T02:53:20Z" duration-ms="155789">
    <groups>
      <group name="functional">
        <method signature="QtripTests.qtrip_ui_001()[pri:0, instance:demo.QtripTests@13d4992d]" name="qtrip_ui_001" class="demo.QtripTests"/>
        <method signature="QtripTests.qtrip_ui_002()[pri:0, instance:demo.QtripTests@13d4992d]" name="qtrip_ui_002" class="demo.QtripTests"/>
        <method signature="QtripTests.qtrip_ui_003()[pri:0, instance:demo.QtripTests@13d4992d]" name="qtrip_ui_003" class="demo.QtripTests"/>
      </group> <!-- functional -->
      <group name="api">
        <method signature="QtripTests.qtrip_non_functional_001()[pri:0, instance:demo.QtripTests@13d4992d]" name="qtrip_non_functional_001" class="demo.QtripTests"/>
        <method signature="QtripTests.qtrip_non_functional_002()[pri:0, instance:demo.QtripTests@13d4992d]" name="qtrip_non_functional_002" class="demo.QtripTests"/>
        <method signature="QtripTests.qtrip_non_functional_003()[pri:0, instance:demo.QtripTests@13d4992d]" name="qtrip_non_functional_003" class="demo.QtripTests"/>
        <method signature="QtripTests.qtrip_non_functional_004()[pri:0, instance:demo.QtripTests@13d4992d]" name="qtrip_non_functional_004" class="demo.QtripTests"/>
        <method signature="QtripTests.qtrip_non_functional_005()[pri:0, instance:demo.QtripTests@13d4992d]" name="qtrip_non_functional_005" class="demo.QtripTests"/>
      </group> <!-- api -->
    </groups>
    <test started-at="2025-06-06T02:50:44Z" name="Chrome Tests" finished-at="2025-06-06T02:53:20Z" duration-ms="155789">
      <class name="demo.QtripTests">
        <test-method is-config="true" signature="init(java.lang.reflect.Method)[pri:0, instance:demo.QtripTests@13d4992d]" started-at="2025-06-06T08:20:44Z" name="init" finished-at="2025-06-06T08:20:51Z" duration-ms="6414" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void demo.QtripTests.qtrip_non_functional_001() throws com.fasterxml.jackson.core.exc.StreamWriteException,com.fasterxml.jackson.databind.DatabindException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="qtrip_non_functional_001()[pri:0, instance:demo.QtripTests@13d4992d]" started-at="2025-06-06T08:20:51Z" name="qtrip_non_functional_001" finished-at="2025-06-06T08:20:55Z" duration-ms="4101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- qtrip_non_functional_001 -->
        <test-method is-config="true" signature="init(java.lang.reflect.Method)[pri:0, instance:demo.QtripTests@13d4992d]" started-at="2025-06-06T08:20:55Z" name="init" finished-at="2025-06-06T08:20:55Z" duration-ms="16" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void demo.QtripTests.qtrip_non_functional_002()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="qtrip_non_functional_002()[pri:0, instance:demo.QtripTests@13d4992d]" started-at="2025-06-06T08:20:55Z" name="qtrip_non_functional_002" finished-at="2025-06-06T08:21:11Z" duration-ms="16678" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
	expected [400] but found [200]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
	expected [400] but found [200]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
	at demo.QtripTests.qtrip_non_functional_002(QtripTests.java:139)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:146)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:91)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- qtrip_non_functional_002 -->
        <test-method is-config="true" signature="init(java.lang.reflect.Method)[pri:0, instance:demo.QtripTests@13d4992d]" started-at="2025-06-06T08:21:11Z" name="init" finished-at="2025-06-06T08:21:11Z" duration-ms="23" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void demo.QtripTests.qtrip_non_functional_003() throws org.json.JSONException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="qtrip_non_functional_003()[pri:0, instance:demo.QtripTests@13d4992d]" started-at="2025-06-06T08:21:11Z" name="qtrip_non_functional_003" finished-at="2025-06-06T08:21:19Z" duration-ms="7313" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- qtrip_non_functional_003 -->
        <test-method is-config="true" signature="init(java.lang.reflect.Method)[pri:0, instance:demo.QtripTests@13d4992d]" started-at="2025-06-06T08:21:19Z" name="init" finished-at="2025-06-06T08:21:19Z" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void demo.QtripTests.qtrip_non_functional_004() throws org.json.JSONException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="qtrip_non_functional_004()[pri:0, instance:demo.QtripTests@13d4992d]" started-at="2025-06-06T08:21:19Z" name="qtrip_non_functional_004" finished-at="2025-06-06T08:21:25Z" duration-ms="6556" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- qtrip_non_functional_004 -->
        <test-method signature="qtrip_non_functional_005()[pri:0, instance:demo.QtripTests@13d4992d]" started-at="2025-06-06T08:21:25Z" name="qtrip_non_functional_005" finished-at="2025-06-06T08:21:36Z" duration-ms="10708" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- qtrip_non_functional_005 -->
        <test-method is-config="true" signature="init(java.lang.reflect.Method)[pri:0, instance:demo.QtripTests@13d4992d]" started-at="2025-06-06T08:21:25Z" name="init" finished-at="2025-06-06T08:21:25Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void demo.QtripTests.qtrip_non_functional_005() throws org.json.JSONException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="init(java.lang.reflect.Method)[pri:0, instance:demo.QtripTests@13d4992d]" started-at="2025-06-06T08:21:36Z" name="init" finished-at="2025-06-06T08:21:36Z" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void demo.QtripTests.qtrip_ui_001()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="qtrip_ui_001()[pri:0, instance:demo.QtripTests@13d4992d]" started-at="2025-06-06T08:21:36Z" name="qtrip_ui_001" finished-at="2025-06-06T08:21:55Z" duration-ms="18638" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- qtrip_ui_001 -->
        <test-method is-config="true" signature="init(java.lang.reflect.Method)[pri:0, instance:demo.QtripTests@13d4992d]" started-at="2025-06-06T08:21:55Z" name="init" finished-at="2025-06-06T08:21:55Z" duration-ms="28" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void demo.QtripTests.qtrip_ui_002() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="qtrip_ui_002()[pri:0, instance:demo.QtripTests@13d4992d]" started-at="2025-06-06T08:21:55Z" name="qtrip_ui_002" finished-at="2025-06-06T08:22:42Z" duration-ms="47630" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- qtrip_ui_002 -->
        <test-method is-config="true" signature="init(java.lang.reflect.Method)[pri:0, instance:demo.QtripTests@13d4992d]" started-at="2025-06-06T08:22:42Z" name="init" finished-at="2025-06-06T08:22:42Z" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void demo.QtripTests.qtrip_ui_003() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="qtrip_ui_003()[pri:0, instance:demo.QtripTests@13d4992d]" started-at="2025-06-06T08:22:42Z" name="qtrip_ui_003" finished-at="2025-06-06T08:23:20Z" duration-ms="37648" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- qtrip_ui_003 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:demo.QtripTests@13d4992d]" started-at="2025-06-06T08:23:20Z" name="tearDown" finished-at="2025-06-06T08:23:21Z" duration-ms="573" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- demo.QtripTests -->
    </test> <!-- Chrome Tests -->
  </suite> <!-- Qtrip Suite -->
</testng-results>
